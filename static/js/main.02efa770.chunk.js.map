{"version":3,"sources":["assets/profile-pic.jpg","logo.svg","TopBar/TopBar.js","hex-item/hex-item.js","NavBar/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","smoothscroll","polyfill","TopBar","props","hideBar","state","stickTop","checkIfMobile","window","scrollY","document","documentElement","clientHeight","setState","prev","showMenu","addEventListener","this","removeEventListener","e","time","where","scrollIntoView","behavior","eAmt","scrollBy","console","log","test","navigator","userAgent","classHide","className","style","animation","href","onClick","toggleMenu","id","SmoothVerticalScrolling","refsList","current","React","Component","HexItem","src","data","img","title","text","App","items","image01","homeRef","createRef","aboutRef","projectRef","contactRef","reachAbout","getBoundingClientRect","top","curTime","setTimeout","SVS_B","elements","querySelectorAll","windowHeight","innerHeight","i","length","element","classList","add","remove","ref","smoothVerticalScrolling","height","Boolean","location","hostname","match","ReactDOM","render","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.02efa770.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile-pic.94300259.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from 'react';\r\nimport './TopBar.css';\r\nimport smoothscroll from 'smoothscroll-polyfill';\r\n\r\nsmoothscroll.polyfill();\r\n\r\nexport default class TopBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let prev = 0;\r\n    this.state = { \r\n      // stickTop: false, \r\n      stickTop: this.checkIfMobile() || window.scrollY>document.documentElement.clientHeight?true:false, \r\n      showMenu: false, \r\n    };\r\n    this.checkIfMobile();\r\n  }\r\n\r\n  \r\n  hideBar = () => {\r\n    const { stickTop } = this.state;\r\n\r\n    //if scroll down\r\n\r\n    if(this.checkIfMobile() || window.scrollY > document.documentElement.clientHeight+50){\r\n      this.setState({ stickTop: true })\r\n\r\n    //scroll up\r\n    } else {\r\n      if(window.scrollY < document.documentElement.clientHeight*1.0){\r\n        this.setState({ stickTop: false })\r\n      }\r\n    }\r\n    this.prev = window.scrollY;    \r\n  }\r\n\r\n  componentDidMount(){\r\n    window.addEventListener('scroll', this.hideBar);\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    window.removeEventListener('scroll', this.hideBar);\r\n  }\r\n\r\n  SmoothVerticalScrolling(e, time, where) {\r\n    this.setState({showMenu: false});\r\n    e.scrollIntoView({behavior: \"smooth\"})\r\n    // var eTop = e.getBoundingClientRect().top;\r\n    // console.log(\"aa\", eTop);\r\n    // window.scrollBy(0, eTop);\r\n    // var eAmt = eTop / 60;\r\n    // // eAmt = eAmt > 1 ? eAmt : 1; \r\n    // console.log(\"cc\", eAmt);\r\n\r\n\r\n    // var curTime = 0;\r\n    // var scrollAmt = 0;\r\n    // while (curTime < time) {\r\n    //   window.setTimeout(this.SVS_B, curTime, eAmt, where);\r\n    //   curTime += time / 60;\r\n    //   scrollAmt+=eAmt\r\n    // }\r\n\r\n  }\r\n\r\n  SVS_B(eAmt, where) {\r\n    if(where == \"center\" )\r\n      window.scrollBy(0, eAmt / 2);\r\n    if (where == \"top\" || where == \"\"){\r\n      window.scrollBy(0, eAmt);\r\n    }\r\n  }\r\n  \r\n  toggleMenu(){\r\n    console.log(\"showMenu\", this.state.showMenu);\r\n    const showMenu = this.state.showMenu;\r\n    this.setState({showMenu: !showMenu,});\r\n  }\r\n\r\n  checkIfMobile(){\r\n    if( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ) {\r\n      console.log(\"mobile true\");\r\n      return true;\r\n    }\r\n    console.log(\"mobile false\");\r\n    return false;\r\n  }\r\n\r\n  render(){\r\n    const classHide = this.state.stickTop ?  'stick-top': 'non-stick';\r\n    const showMenu = this.state.showMenu ? 'hb-show' : 'hb-hide';\r\n    // const classHide = this.state.stickTop ? 'stick-top' : 'non-stick';\r\n    return (\r\n      <div className={`topbar ${classHide}`} style={{animation: this.checkIfMobile()?\"none\":\"\"}}>\r\n        <nav className=\"navbar\" >\r\n          <a href=\"#\" className=\"logo\">the logo</a>\r\n          <div className=\"hb-button\" onClick={()=>{this.toggleMenu()}}>Menu</div>\r\n          <ul className=\"link-wrap\" id=\"js-menu\">\r\n            <li>\r\n              <div className=\"nav-links\" onClick={()=>{this.SmoothVerticalScrolling(this.props.refsList[0].current, 300, \"top\")}}>Home</div>\r\n            </li>\r\n            <li>\r\n              <div className=\"nav-links\" onClick={()=>{console.log(this.SmoothVerticalScrolling(this.props.refsList[1].current, 300, \"top\"))}}>About</div>\r\n            </li>\r\n            <li>\r\n              <div className=\"nav-links\" onClick={()=>{this.SmoothVerticalScrolling(this.props.refsList[2].current, 300, \"top\")}}>Projects</div>\r\n            </li>\r\n            <li>\r\n              <div className=\"nav-links\" onClick={()=>{this.SmoothVerticalScrolling(this.props.refsList[3].current, 300, \"top\")}}>Contact</div>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <div className={`hb-menu ${showMenu}`}>\r\n          <ul className=\"\">\r\n            <li>\r\n              <div className=\"nav-links\" onClick={()=>{this.SmoothVerticalScrolling(this.props.refsList[0].current, 275, \"top\")}}>Home</div>\r\n            </li>\r\n            <li>\r\n              <div className=\"nav-links\" onClick={()=>{console.log(this.SmoothVerticalScrolling(this.props.refsList[1].current, 275, \"top\"))}}>About</div>\r\n            </li>\r\n            <li>\r\n              <div className=\"nav-links\" onClick={()=>{this.SmoothVerticalScrolling(this.props.refsList[2].current, 275, \"top\")}}>Projects</div>\r\n            </li>\r\n            <li>\r\n              <div className=\"nav-links\" onClick={()=>{this.SmoothVerticalScrolling(this.props.refsList[3].current, 275, \"top\")}}>Contact</div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react'\r\n\r\nexport default class HexItem extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n  }\r\n\r\n  render(){\r\n    return(\r\n     <div>\r\n      <img src={this.props.data.img} />\r\n      <h3>{this.props.data.title }</h3>\r\n      <p>{this.props.data.text}</p>\r\n     </div> \r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport './NavBar.css'\r\n\r\nexport default class NavBar extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    console.log(this.props.refsList);\r\n\r\n  }\r\n\r\n  smoothVerticalScrolling(e, time, where) {\r\n    var eTop = e.getBoundingClientRect().top;\r\n    var eAmt = eTop / 100;\r\n    var curTime = 0;\r\n    while (curTime <= time) {\r\n      window.setTimeout(this.SVS_B, curTime, eAmt, where);\r\n      curTime += time / 100;\r\n    }\r\n  }\r\n\r\n  SVS_B(eAmt, where) {\r\n    if(where == \"center\" || where == \"\")\r\n      window.scrollBy(0, eAmt / 2);\r\n    if (where == \"top\")\r\n      window.scrollBy(0, eAmt);\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <nav className=\"mynavbar\" >\r\n          <a href=\"#\" className=\"logo\">the logo</a>\r\n          <ul className=\"main-nav\" id=\"js-menu\">\r\n            <li>\r\n              <div className=\"nav-links\" onClick={()=>{console.log(\"aaa\");this.smoothVerticalScrolling(this.props.refsList[0].current, 275, \"top\")}}>Home</div>\r\n            </li>\r\n            <li>\r\n              <div className=\"nav-links\" onClick={()=>{console.log(this.smoothVerticalScrolling(this.props.refsList[1].current, 275, \"top\"))}}>About</div>\r\n            </li>\r\n            <li>\r\n              <div className=\"nav-links\" onClick={()=>{this.smoothVerticalScrolling(this.props.refsList[2].current, 275, \"top\")}}>Projects</div>\r\n            </li>\r\n            <li>\r\n              <div className=\"nav-links\" onClick={()=>{this.smoothVerticalScrolling(this.props.refsList[3].current, 275, \"top\")}}>Contact</div>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n    )\r\n  }\r\n}","import React, { createRef } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport './styles.css';\r\nimport scrollToComponent from 'react-scroll-to-component';\r\nimport image01 from './assets/profile-pic.jpg';\r\nimport TopBar from './TopBar/TopBar.js';\r\nimport NavBar from './NavBar/NavBar.js';\r\nimport HexItem from './hex-item/hex-item.js';\r\nimport smoothscroll from 'smoothscroll-polyfill';\r\n\r\nsmoothscroll.polyfill();\r\n\r\nfunction ScrollToButton(props) {\r\n  return (\r\n    <button className=\"square\" onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nclass App extends React.Component {\r\n  items = [\r\n    {\r\n      img:image01,\r\n      title:\"Fast\",\r\n      text:\"Fast load times and lag free interaction, my highest priority\",\r\n    },\r\n    {\r\n      img:image01,\r\n      title:\"Responsive\",\r\n      text:\"My layouts will work on any device, big or small\",\r\n    },\r\n    {\r\n      img:image01,\r\n      title:\"Intuitive\",\r\n      text:\"Strong preference for easy to use, intuitive UX/UI\",\r\n    },\r\n    {\r\n      img:image01,\r\n      title:\"Dynamic\",\r\n      text:\"Websites done have to be static, I love making ebsites come to life!\",\r\n    }\r\n  ]\r\n  constructor(props) {\r\n    super(props);\r\n    this.homeRef = createRef();\r\n    this.aboutRef = createRef();\r\n    this.projectRef = createRef();\r\n    this.contactRef = createRef();\r\n    this.refsList = [this.homeRef, this.aboutRef, this.projectRef, this.contactRef];\r\n    this.state = {\r\n      reachAbout: false,\r\n    };\r\n  }\r\n\r\n  smoothVerticalScrolling(e, time, where) {\r\n    var eTop = e.getBoundingClientRect().top;\r\n    var eAmt = eTop / 100;\r\n    var curTime = 0;\r\n    while (curTime <= time) {\r\n      window.setTimeout(this.SVS_B, curTime, eAmt, where);\r\n      curTime += time / 100;\r\n    }\r\n  }\r\n\r\n  SVS_B(eAmt, where) {\r\n    if(where == \"center\" || where == \"\")\r\n      window.scrollBy(0, eAmt / 2);\r\n    if (where == \"top\")\r\n      window.scrollBy(0, eAmt);\r\n  }\r\n\r\n  \r\n  componentDidMount(){\r\n    let elements = document.querySelectorAll('.hidden');\r\n    let windowHeight = window.innerHeight;\r\n    console.log(elements);\r\n\r\n    window.addEventListener('scroll', () => {\r\n      for (let i = 0; i < elements.length; i++) {\r\n        let element = elements[i];\r\n        let positionFromTop = elements[i].getBoundingClientRect().top;\r\n  \r\n        if (positionFromTop - (windowHeight*.75) <= 0) {\r\n          element.classList.add('slide');\r\n          element.classList.remove('hidden');\r\n        }\r\n      }\r\n    }); \r\n\r\n    window.addEventListener('resize', ()=>{\r\n      elements = document.querySelectorAll('.hidden');\r\n      windowHeight = window.innerHeight;\r\n    })\r\n  }\r\n  \r\n  render () {\r\n    return (\r\n      <div className=\"App\">\r\n        <section ref={this.homeRef} id=\"home\" className=\"my-section \" >\r\n          Hello! My name is <b>Kel Zhang</b>. I'm a creative, curious web developer.\r\n          <br />\r\n          <img className=\"circular\" src={image01} />\r\n          <div className=\"landing-btn\" onClick={()=>{this.smoothVerticalScrolling(this.aboutRef.current, 275, \"top\")}} >\r\n            Get To Know Me\r\n          </div>\r\n          <br />\r\n          {/* <div id=\"landing-navbar\" className=\"landing-navbar\">\r\n          </div>  */}\r\n          \r\n        </section>\r\n        <TopBar refsList={this.refsList} />\r\n        \r\n        {/* <!-- Resume --> */}\r\n        <section ref={this.aboutRef} id=\"about\" className={`my-section `}>\r\n          <h2 className='hidden'>About</h2>\r\n          <div className=\"hidden items-row\">\r\n            <HexItem data={this.items[0]}></HexItem>\r\n            {/* <HexItem data={this.items[1]}></HexItem> */}\r\n            {/* <HexItem data={this.items[2]}></HexItem>\r\n            <HexItem data={this.items[3]}></HexItem> */}\r\n          </div>\r\n          <b>Resume</b>\r\n          <div className=\"hidden\">\r\n            <h4>Languages</h4>\r\n            <ul>\r\n              <li>Python</li>\r\n              <li>Ruby</li>\r\n              <li>JavaScript</li>\r\n              <li>Java</li>\r\n              <li>HTML</li>\r\n              <li>CSS</li>\r\n              <li>C#</li>\r\n              <li>Objective C</li>\r\n            </ul>\r\n            <h4>Technologies/Frameworks</h4>\r\n            <ul>\r\n              <li>Ruby on Rails</li>\r\n              <li>Angular</li>\r\n              <li>React.js</li>\r\n              <li>Redux</li>\r\n              <li>Django</li>\r\n              <li>Flask</li>\r\n              <li>Node.js</li>\r\n              <li>Git</li>\r\n              <li>GIMP/PhotoShop</li>\r\n              <li>Bootstrap</li>\r\n              <li>MSSQL Server</li> \r\n              <li>Unix/Linux BASH</li>\r\n              <li>JQuery</li>\r\n              <li>Cordova</li>\r\n              <li>AWS</li>      \r\n            </ul> \r\n          </div>      \r\n        </section>\r\n\r\n        {/* <!-- Projects --> */}\r\n        <section ref={this.projectRef} id=\"projects\" className=\"my-section\">\r\n          <h2 className=\"hidden\">Projects</h2>\r\n          <div className=\"hidden \" style={{height: 500+\"px\"}}>\r\n            aa\r\n          </div>\r\n          a\r\n          <br/>\r\n          <br/>\r\n          <br/>\r\n          <br/>\r\n        </section>\r\n\r\n        {/* <!-- Contact --> */}\r\n        <section ref={this.contactRef} id=\"contact\" className=\"my-section\">\r\n          <h2 className=\"hidden\">Contact</h2>\r\n          <div className=\"hidden \">\r\n            <p><strong>Connect With Me</strong></p>\r\n            E-mail: kz53@cornell.edu\r\n            LinkedIn: \r\n            Download CV\r\n            <div className=\"\" style={{height: 500+\"px\"}}>\r\n              aa\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}