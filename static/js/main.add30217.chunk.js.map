{"version":3,"sources":["assets/profile-pic.jpg","logo.svg","topbar/TopBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","TopBar","props","state","isHide","hideBar","window","scrollY","setState","prev","console","log","refsList","addEventListener","this","removeEventListener","e","time","where","eAmt","getBoundingClientRect","top","curTime","setTimeout","SVS_B","scrollBy","classHide","className","href","id","onClick","SmoothVerticalScrolling","current","React","Component","App","homeRef","createRef","aboutRef","projectRef","contactRef","ref","style","backgroundColor","SmoothVerticalScrzolling","src","image01","height","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.add30217.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile-pic.2248ebee.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React, { createRef } from 'react';\r\nimport './TopBar.css';\r\n\r\nexport default class TopBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(this.props.refsList);\r\n  }\r\n\r\n  state = { isHide: false };\r\n\r\n  hideBar = () => {\r\n    const { isHide } = this.state\r\n    window.scrollY < 500 ?\r\n    !isHide && this.setState({ isHide: true })\r\n    :\r\n    isHide && this.setState({ isHide: false });\r\n    this.prev = window.scrollY;\r\n  }\r\n\r\n  componentDidMount(){\r\n    window.addEventListener('scroll', this.hideBar);\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    window.removeEventListener('scroll', this.hideBar);\r\n  }\r\n\r\n  SmoothVerticalScrolling(e, time, where) {\r\n    var eTop = e.getBoundingClientRect().top;\r\n    var eAmt = eTop / 100;\r\n    var curTime = 0;\r\n    while (curTime <= time) {\r\n      window.setTimeout(this.SVS_B, curTime, eAmt, where);\r\n      curTime += time / 100;\r\n    }\r\n  }\r\n\r\n  SVS_B(eAmt, where) {\r\n    if(where == \"center\" || where == \"\")\r\n      window.scrollBy(0, eAmt / 2);\r\n    if (where == \"top\")\r\n      window.scrollBy(0, eAmt);\r\n  }\r\n  \r\n  render(){\r\n    const classHide = this.state.isHide ? 'hide' : '';\r\n    return (\r\n      <div className={`topbar ${classHide}`}>\r\n        <nav className=\"navbar\" >\r\n          <a href=\"#\" className=\"logo\">the logo</a>\r\n          <ul className=\"main-nav\" id=\"js-menu\">\r\n            <li>\r\n              <div className=\"nav-links\" onClick={()=>{this.SmoothVerticalScrolling(this.props.refsList[0].current, 275, \"top\")}}>Home</div>\r\n            </li>\r\n            <li>\r\n              <div className=\"nav-links\" onClick={()=>{console.log(this.SmoothVerticalScrolling(this.props.refsList[1].current, 275, \"top\"))}}>About</div>\r\n            </li>\r\n            <li>\r\n              <div className=\"nav-links\" onClick={()=>{this.SmoothVerticalScrolling(this.props.refsList[2].current, 275, \"top\")}}>Projects</div>\r\n            </li>\r\n            <li>\r\n              <div className=\"nav-links\" onClick={()=>{this.SmoothVerticalScrolling(this.props.refsList[3].current, 275, \"top\")}}>Contact</div>\r\n            </li>\r\n            <li>\r\n              <a href=\"#blog\" className=\"nav-links\">Blog</a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { createRef } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport './styles.css';\r\nimport scrollToComponent from 'react-scroll-to-component';\r\nimport image01 from './assets/profile-pic.jpg';\r\nimport TopBar from './topbar/TopBar.js';\r\n\r\nfunction ScrollToButton(props) {\r\n  return (\r\n    <button className=\"square\" onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.homeRef = createRef();\r\n    this.aboutRef = createRef();\r\n    this.projectRef = createRef();\r\n    this.contactRef = createRef();\r\n    this.refsList = [this.homeRef, this.aboutRef, this.projectRef, this.contactRef];\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className=\"App\">\r\n        <TopBar refsList={this.refsList} />\r\n        <nav id=\"sidebar\" >\r\n          <ol>\r\n            <li>Re</li>\r\n            <li>Pro</li>\r\n            <li>Con</li>\r\n          </ol>\r\n        </nav> \r\n        <section ref={this.homeRef} id=\"home\" className=\"my-border my-section \" >\r\n          Hello! My name is <b>Kel Zhang</b>. I'm a creative, curious web developer.\r\n          <div onClick={()=>{this.SmoothVerticalScrolling(this.homeRef.current, 275, \"top\")}} style={{backgroundColor: 'aqua'}} >Hire Me</div>\r\n          <div onClick={()=>{this.SmoothVerticalScrzolling(this.aboutRef.current, 275, \"top\")}} style={{backgroundColor: 'magenta'}}>View my work</div>\r\n          <br />\r\n          <img className=\"circular\" src={image01} />\r\n          <button\r\n            onClick={() => {\r\n              console.log(\"scroll\");  \r\n              // this.contactRef.current.scrollIntoView({ behavior: 'smooth' });\r\n              this.SmoothVerticalScrolling(this.contactRef.current, 275, \"top\");\r\n            }}\r\n          > \r\n            Cliquez moi SVP!\r\n          </button>\r\n          <br />\r\n          <div className=\"my-bg\" style={{height: 500+\"px\"}}>\r\n            aa\r\n          </div>\r\n         </section>\r\n      \r\n        <div className=\"parallax\"></div>\r\n        \r\n        {/* <!-- Resume --> */}\r\n        <section ref={this.aboutRef} id=\"about\" className=\"my-border my-section\">\r\n          <b>Resume</b>\r\n          <div>\r\n            <ul>\r\n              {/* <li>Angular</li>\r\n              <li>React</li>\r\n              <li>CSS</li>\r\n              <li>Semantic HTML</li> */}\r\n              <li>Fast</li>\r\n              <li>Responsive</li>\r\n              <li>Intuitive</li>\r\n              <li>Dynamic</li>\r\n            </ul>\r\n            <h4>Languages</h4>\r\n            <ul>\r\n              <li>Python</li>\r\n              <li>Ruby</li>\r\n              <li>JavaScript</li>\r\n              <li>Java</li>\r\n              <li>HTML</li>\r\n              <li>CSS</li>\r\n              <li>C#</li>\r\n              <li>Objective C</li>\r\n            </ul>\r\n            <h4>Technologies/Frameworks</h4>\r\n            <ul>\r\n              <li>Ruby on Rails</li>\r\n              <li>Angular</li>\r\n              <li>React.js</li>\r\n              <li>Redux</li>\r\n              <li>Django</li>\r\n              <li>Flask</li>\r\n              <li>Node.js</li>\r\n              <li>Git</li>\r\n              <li>GIMP/PhotoShop</li>\r\n              <li>Bootstrap</li>\r\n              <li>MSSQL Server</li> \r\n              <li>Unix/Linux BASH</li>\r\n              <li>JQuery</li>\r\n              <li>Cordova</li>\r\n              <li>AWS</li>      \r\n            </ul>\r\n            <h4>Work Experience</h4>\r\n              <h5>SKF</h5>\r\n              Jr. Fullstack Developer, Lansdale PA\r\n              <ul>\r\n                <li>Created a platform to combine multiple content portals into a single service while ensuring ability to scale and host future applications</li>\r\n                <li>Worked with Amazon Web Services to build microservices for a serverless architecture</li>\r\n                <li>Used Angular, Bootstrap, and Material Design to make beautiful, responsive multimedia experiences</li>\r\n                <li>Designed mockups and favicons in GIMP while ensuring that they conform to identity standards</li>\r\n                <li>Created data visualizations with vanilla JavaScript animations and D3.js library</li>\r\n                <li>Created a pipeline for deploying code to Node Lambda environment </li>\r\n                <li>Tutored and assisted in onboarding of new team members to Angular/Node environment</li>\r\n              </ul>\r\n              <h5>Freelance Web Development</h5>\r\n              Consultant\r\n              <ul>\r\n                <li>Developed CRUD web application for a client using PHP (CodeIgniter)</li>\r\n                <li>Created REST API from scratch within a Lambda environment</li>\r\n                <li>Rewrote existing code to Angular and improved response times from more than 10 seconds to less than 3\t</li>\r\n                <li>Built authentication piece that integrates with AWS Cognito and Microsoft Active Directory to provide secure login functionality</li>\r\n              </ul>\r\n              <h5>Frontage Laboratories</h5>\r\n              Intern\r\n              <ul>\r\n                <li>Developed multiple Python apps for researchers to pipeline data to databases</li>\r\n                <li>Redesigned parts of the company website to improve UI/UX and used appJar Python framework to create user friendly GUIs </li>\r\n                <li>Optimized SQL queries to significantly improve database response time</li>\r\n              </ul>\r\n          </div>      \r\n        </section>\r\n\r\n        {/* <!-- Projects --> */}\r\n        <section ref={this.projectRef} id=\"projects\" className=\"my-border my-section\">\r\n          <div className=\"section\">\r\n            <b>Projects</b>\r\n          </div>\r\n          <div className=\"my-bg\" style={{height: 500+\"px\"}}>\r\n            aa\r\n          </div>\r\n        </section>\r\n\r\n        {/* <!-- Contact --> */}\r\n        <section ref={this.contactRef} id=\"contact\" className=\"my-border my-section\">\r\n          <div>\r\n            <p><strong>Connect With Me</strong></p>\r\n            E-mail: kz53@cornell.edu\r\n            LinkedIn: \r\n            Download CV\r\n            <div className=\"my-bg\" style={{height: 500+\"px\"}}>\r\n              aa\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}